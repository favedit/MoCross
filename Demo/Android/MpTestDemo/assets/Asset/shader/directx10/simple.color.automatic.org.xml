<Configuration>
   <Version label='alpha 0.1' />
   <!-- ------------------------------------------------------------ -->
   <State name='fill_mode'   value='Fill'/>
   <State name='cull_mode'   value='Front'/>
   <State name='depth_mode'  value='Less'/>
   <State name='depth_write' value='Y'/>
   <State name='blend_mode'  value='Y' source='SourceAlpha' target='OneMinusSourceAlpha'/>
   <State name='alpha_test'  value='N'/>
   <!-- ------------------------------------------------------------ -->
   <Specular name='shadow'   value='N'/>
   <Specular name='lightmap' value='N'/>
   <Specular name='fog'      value='N'/>
   <!-- ------------------------------------------------------------ -->
   <Const name='vc_model_matrix'           linker='Vertex.ModelMatrix'/>
   <Const name='vc_view_projection_matrix' linker='Vertex.ModelMatrix'/>
   <Const name='vc_camera_position'        linker='Vertex.ModelMatrix'/>
   <Const name='vc_light_direction'        linker='Vertex.ModelMatrix'/>
   <Const name='fc_camera_position'        linker='Vertex.ModelMatrix'/>
   <Const name='fc_light_direction'        linker='Vertex.ModelMatrix'/>
   <!-- ------------------------------------------------------------ -->
   <Attribute name='va_instance' linker='Instance' format='Float1'/>
   <Attribute name='va_position' linker='Position' format='Float4'/>
   <Attribute name='va_color'    linker='Color'    format='ByteNormal4'/>
   <Attribute name='va_coord'    linker='Coord'    format='Float2'/>
   <Attribute name='va_normal'   linker='Normal'   format='ByteNormal4'/>
   <Attribute name='va_binormal' linker='Binormal' format='ByteNormal4'/>
   <Attribute name='va_tangent'  linker='Tangent'  format='ByteNormal4'/>
   <!-- ------------------------------------------------------------ -->
   <Sampler name='fs_diffuse'     linker='Diffuse'     source='PackDiffuse'/>
   <Sampler name='fs_normal'      linker='Normal'      source='PackNormal'/>
   <Sampler name='fs_specular'    linker='Specular'    source='PackSpecular'/>
   <Sampler name='fs_light'       linker='Light'       source='PackLight'/>
   <Sampler name='fs_environment' linker='Environment' source='Environment'/>
   <!-- ------------------------------------------------------------ -->
   <Source name='vertex' include='asset:global.shader'/>
   <Source name='vertex'><![CDATA[
<shader:include source='asset:shader/template/vertex.common.xml' segment='declare'/>
<shader:include source='asset:shader/template/vertex.position.xml' segment='declare'/>
<shader:include source='asset:shader/template/vertex.coord.xml' segment='declare'/>
<shader:include source='asset:shader/template/vertex.color.xml' segment='declare'/>
<shader:include source='asset:shader/template/vertex.normal.xml' segment='declare'/>

void main(){
<shader:include source='asset:shader/template/vertex.position.xml' segment='main'/>
<shader:include source='asset:shader/template/vertex.color.xml' segment='main'/>
<shader:include source='asset:shader/template/vertex.coord.xml' segment='main'/>
<shader:include source='asset:shader/template/vertex.normal.xml' segment='main'/>
}
   ]]></Source>
   <!-- ------------------------------------------------------------ -->
   <Source name='fragment'><![CDATA[
<shader:include source='asset:shader/template/fragment.common.xml' segment='declare'/>
<shader:include source='asset:shader/template/fragment.ambient.xml' segment='declare'/>
<shader:include source='asset:shader/template/fragment.diffuse.xml' segment='declare'/>
<shader:include source='asset:shader/template/fragment.specular.xml' segment='declare'/>
<shader:include source='asset:shader/template/fragment.environment.xml' segment='declare'/>
<shader:include source='asset:shader/template/fragment.color.xml' segment='declare'/>

void main(){
   vec4 result = vec4(0.0, 0.0, 0.0, 1.0);
<shader:include source='asset:shader/template/fragment.ambient.xml' segment='main'/>
<shader:include source='asset:shader/template/fragment.diffuse.xml' segment='main'/>
<shader:include source='asset:shader/template/fragment.specular.xml' segment='main'/>
<shader:include source='asset:shader/template/fragment.environment.xml' segment='main'/>
<shader:include source='asset:shader/template/fragment.color.xml' segment='main'/>
   gl_FragColor = result;
}
   ]]></Source>
</Configuration>
