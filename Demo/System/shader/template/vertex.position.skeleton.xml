<Configuration>
   <Version label='alpha 0.1' />
   <!-- ------------------------------------------------------------ -->
   <Source name='declare'><![CDATA[
<shader:false source='support.instance'>
uniform mat4 vc_model_matrix;
uniform vec4 vc_bone_matrix[<shader:write source='bone.count'/>];
</shader:false>
<shader:true source='support.instance'>
uniform mat4 vc_model_matrix[<shader:write source='instance.count'/>];
uniform vec4 vc_bone_matrix[<shader:write source='instance.bone.count'/>];
</shader:true>

<shader:true source='support.instance'>
attribute float va_instance;
</shader:true>
attribute vec4 va_position;
<shader:true source='support.skeleton'>
attribute vec4 va_bone_index;
attribute vec4 va_bone_weight;
</shader:true>
   ]]></Source>
   <!-- ------------------------------------------------------------ -->
   <Source name='main'><![CDATA[
   // Calculate
   ivec4 boneIndex = ivec4(va_bone_index) * 3;
   vec4 position = vec4(0.0, 0.0, 0.0, 1.0);
   vec3 bonePosition;
<shader:true source='support.bone.weight.1'>
   bonePosition.x = dot(va_position, vc_bone_matrix[boneIndex.x    ]);
   bonePosition.y = dot(va_position, vc_bone_matrix[boneIndex.x + 1]);
   bonePosition.z = dot(va_position, vc_bone_matrix[boneIndex.x + 2]);
   position.xyz += bonePosition.xyz * va_bone_weight.x;
</shader:true>
<shader:true source='support.bone.weight.2'>
   bonePosition.x = dot(va_position, vc_bone_matrix[boneIndex.y    ]);
   bonePosition.y = dot(va_position, vc_bone_matrix[boneIndex.y + 1]);
   bonePosition.z = dot(va_position, vc_bone_matrix[boneIndex.y + 2]);
   position.xyz += bonePosition.xyz * va_bone_weight.y;
</shader:true>
<shader:true source='support.bone.weight.3'>
   bonePosition.x = dot(va_position, vc_bone_matrix[boneIndex.z    ]);
   bonePosition.y = dot(va_position, vc_bone_matrix[boneIndex.z + 1]);
   bonePosition.z = dot(va_position, vc_bone_matrix[boneIndex.z + 2]);
   position.xyz += bonePosition.xyz * va_bone_weight.z;
</shader:true>
<shader:true source='support.bone.weight.4'>
   bonePosition.x = dot(va_position, vc_bone_matrix[boneIndex.w    ]);
   bonePosition.y = dot(va_position, vc_bone_matrix[boneIndex.w + 1]);
   bonePosition.z = dot(va_position, vc_bone_matrix[boneIndex.w + 2]);
   position.xyz += bonePosition.xyz * va_bone_weight.w;
</shader:true>
<shader:true source='support.instance'>
   mat4 modelMat4 = vc_model_matrix[int(va_instance)];
   vec4 modelPosition = position * modelMat4;
</shader:true>
<shader:false source='support.instance'>
   vec4 modelPosition = position * vc_model_matrix;
</shader:false>
   modelPosition.w = 1.0;
   // Calculate model position
   v_model_position = modelPosition;
   // Calculate proection position
   gl_Position = modelPosition * vc_view_projection_matrix;
   ]]></Source>
   <!-- ------------------------------------------------------------ -->
</Configuration>
