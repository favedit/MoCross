<Configuration>
   <Version label='alpha 0.1' />
   <!-- ------------------------------------------------------------ -->
   <Source name='declare'><![CDATA[
<shader:true source='vertex.attribute.normal'>
attribute vec3 va_normal;
<shader:true source='vertex.attribute.normal.full'>
attribute vec3 va_binormal;
attribute vec3 va_tangent;
</shader:true>
</shader:true>

<shader:true source='vertex.attribute.normal'>
varying vec3 v_normal;
<shader:true source='support.dump'>
varying vec3 v_camera_ts;
varying vec3 v_light_ts;
</shader:true>
</shader:true>
   ]]></Source>
   <!-- ------------------------------------------------------------ -->
   <Source name='main'><![CDATA[
<shader:true source='support.instance'>
   mat3 modelMat3 = mat3(modelMat4);
</shader:true>
<shader:false source='support.instance'>
   mat3 modelMat3 = mat3(vc_model_matrix);
</shader:false>
<shader:true source='vertex.attribute.normal'>
   v_normal = normalize((va_normal.xyz * 2.0 - 1.0) * modelMat3);
<shader:true source='support.dump'>
<shader:true source='support.instance'>
   vec3 binormal = normalize((va_binormal.xyz * 2.0 - 1.0) * modelMat3);
   vec3 tangent = normalize((va_tangent.xyz * 2.0 - 1.0) * modelMat3);
</shader:true>
<shader:false source='support.instance'>
   vec3 binormal = normalize(va_binormal * vc_model_mat3);
   vec3 tangent = normalize(va_tangent * vc_model_mat3);
</shader:false>
   mat3 matrixTs = mat3(tangent, binormal, normal);
   vec3 cameraDirection = vc_camera_position - v_model_position.xyz;
   v_camera_ts = normalize(cameraDirection * matrixTs);
   v_light_ts = normalize(vc_light_direction * matrixTs);
</shader:true>
</shader:true>
   ]]></Source>
   <!-- ------------------------------------------------------------ -->
</Configuration>
